{"version":3,"sources":["components/header/Header.js","components/main/TodoList.js","components/main/Main.js","components/footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","Component","TodoList","props","handleDoubleClick","event","preventDefault","target","setState","readOnly","handleOnBlur","handleOnChange","editTodo","value","console","log","handleOnDelete","index","newTodoData","todoData","filter","element","i","parentElement","remove","storage","JSON","parse","localStorage","getItem","setItem","stringify","pop","handleOnToggle","checked","completed","nextSibling","state","activeURL","document","querySelectorAll","window","location","pathname","type","onClick","this","data","onDoubleClick","onBlur","onChange","aria-hidden","title","Main","handleKeyDown","keyCode","newTodo","trim","id","push","handleChange","handleOnCheck","allCheck","length","handleLinkClick","clearCompleted","autoFocus","placeholder","onKeyDown","exact","path","map","todo","key","to","Footer","App","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8a1dad39.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Header.css'\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <header>\r\n        <div className=\"wrapper\">\r\n          <h1>todos</h1>\r\n        </div>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport './TodoList.css'\r\nimport { todoData } from './Main';\r\n\r\nexport let length;\r\n\r\nclass TodoList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      readOnly: true,\r\n      completed: this.props.completed\r\n    }\r\n  }\r\n\r\n  handleDoubleClick = (event) => {\r\n    event.preventDefault();\r\n    event.target.className = 'edit-todo editing';\r\n    this.setState({ readOnly: false });\r\n  }\r\n\r\n  handleOnBlur = (event) => {\r\n    event.preventDefault();\r\n    event.target.className = 'edit-todo read-only';\r\n    this.setState({ readOnly: true });\r\n  }\r\n\r\n  // On key change to update value\r\n  handleOnChange = (event) => {\r\n    this.setState({ editTodo: event.target.value });\r\n    console.log(event.target.value);\r\n  }\r\n\r\n  handleOnDelete = (event, index) => {\r\n    event.preventDefault();\r\n    let newTodoData = todoData.filter((element, i) => i !== index);\r\n    event.target.parentElement.remove();\r\n    let storage = JSON.parse(localStorage.getItem('key'));\r\n    localStorage.setItem('key', JSON.stringify(newTodoData));\r\n    todoData.pop(this.todoData);\r\n    console.log(newTodoData, storage);\r\n    // length = todoData.length;\r\n    // length = length - 1;\r\n  }\r\n\r\n  handleOnToggle = (event) => {\r\n    // let allCheck = document.querySelectorAll('.check');\r\n    // let all = document.querySelectorAll('.select-all');\r\n    if (event.target.checked === true) {\r\n      console.log('Checked', event.target)\r\n      this.setState({ completed: true });;\r\n      console.log(event.target.nextSibling, this.props.completed);\r\n    } else {\r\n      console.log('UnChecked', event.target);\r\n      this.setState({ completed: false });;\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Active URL\r\n    const activeURL = document.querySelectorAll('.todo-footer a span');\r\n    if (window.location.pathname === '/') {\r\n      activeURL[0].className = 'active';\r\n    }\r\n    if (window.location.pathname === '/active') {\r\n      activeURL[1].className = 'active';\r\n    }\r\n    if (window.location.pathname === '/completed') {\r\n      activeURL[2].className = 'active';\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"todo-list\">\r\n        <input type=\"checkbox\" className=\"check\" onClick={this.handleOnToggle} />\r\n        <input readOnly={this.state.readOnly}\r\n          className=\"edit-todo\"\r\n          value={this.props.data}\r\n          onDoubleClick={this.handleDoubleClick}\r\n          onBlur={this.handleOnBlur}\r\n          onChange={this.handleOnChange}\r\n        />\r\n        <span className=\"fa fa-times delete-btn\" aria-hidden=\"true\" title=\"Delete\" onClick={this.handleOnDelete}></span>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TodoList;","import React, { Component } from 'react';\r\nimport {\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nimport './Main.css';\r\nimport TodoList from './TodoList';\r\n\r\nconst ENTER_KEY = 13; // Enter Key Code\r\nexport let todoData = [];\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // States\r\n    this.state = {\r\n      id: 0,\r\n      newTodo: '',\r\n      completed: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (localStorage.getItem('key')) {\r\n      let storage = JSON.parse(localStorage.getItem('key'));\r\n      for (let i = 0; i < storage.length; i++) {\r\n        todoData.push(storage[i]);\r\n      }\r\n    }\r\n    this.setState({ id: todoData.length });\r\n  }\r\n\r\n  // On enter key press\r\n  handleKeyDown = (event) => {\r\n    if (event.keyCode !== ENTER_KEY) {\r\n      return;\r\n    }\r\n    event.preventDefault();\r\n    let val = this.state.newTodo.trim();\r\n    if (val) {\r\n      this.setState({ id: this.state.id + 1, newTodo: '' });\r\n      todoData.push(this.state);\r\n      localStorage.setItem('key', JSON.stringify(todoData));\r\n    }\r\n  }\r\n\r\n  // On key change to update value\r\n  handleChange = (event) => {\r\n    this.setState({ newTodo: event.target.value });\r\n  }\r\n\r\n  handleOnCheck = (event) => {\r\n    let allCheck = document.querySelectorAll('.check');\r\n    if (event.target.checked === true) {\r\n      for (let i = 0; i < allCheck.length; i++) {\r\n        allCheck[i].checked = true;\r\n      }\r\n    } else {\r\n      for (let i = 0; i < allCheck.length; i++) {\r\n        allCheck[i].checked = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  handleLinkClick = (event) => {\r\n    const activeURL = document.querySelectorAll('.todo-footer a span');\r\n    for (let i = 0; i < activeURL.length; i++) {\r\n      activeURL[i].className = '';\r\n    }\r\n    event.target.className = 'active';\r\n  }\r\n\r\n  clearCompleted = () => {\r\n    console.log('ClearCompleted');\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <main>\r\n        <div className=\"wrapper\">\r\n          <div className=\"todos\">\r\n            <input type=\"checkbox\" className=\"select-all\" onClick={this.handleOnCheck} />\r\n            <input autoFocus\r\n              className=\"add-todo\"\r\n              placeholder=\"What needs to be done?\"\r\n              value={this.state.newTodo}\r\n              onKeyDown={this.handleKeyDown}\r\n              onChange={this.handleChange}\r\n            />\r\n            {todoData.length > 0 ?\r\n              <div>\r\n                <Switch>\r\n                  <Route exact path=\"/\">\r\n                    {\r\n                      todoData.map((todo, i) =>\r\n                        <TodoList key={i} data={todoData[i].newTodo} completed={todoData[i].completed} />\r\n                      )\r\n                    }\r\n                  </Route>\r\n                  <Route exact path=\"/active\">\r\n                    {\r\n                      todoData.map((todo, i) =>\r\n                        todoData[i].completed === false ? <TodoList key={i} data={todoData[i].newTodo} /> : null\r\n                      )\r\n                    }\r\n                  </Route>\r\n                  <Route exact path=\"/completed\">\r\n                    {\r\n                      todoData.map((todo, i) =>\r\n                        todoData[i].completed === false ? <TodoList key={i} data={todoData[i].newTodo} /> : null\r\n                      )\r\n                    }\r\n                  </Route>\r\n                </Switch>\r\n                <div className=\"todo-footer\">\r\n                  <ul>\r\n                    <li>{todoData.length > 1 ? `${todoData.length} items` : `${todoData.length} item`} left</li>\r\n                    <li>\r\n                      <Link to=\"/\" onClick={this.handleLinkClick}>\r\n                        <span>All</span>\r\n                      </Link>\r\n                      <Link to=\"/active\" onClick={this.handleLinkClick}>\r\n                        <span>Active</span>\r\n                      </Link>\r\n                      <Link to=\"/completed\" onClick={this.handleLinkClick}>\r\n                        <span>Completed</span>\r\n                      </Link>\r\n                    </li>\r\n                    <li>\r\n                      <span onClick={this.clearCompleted}>Clear completed</span>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div> : null}\r\n          </div>\r\n          {todoData.length > 0 ?\r\n            <div>\r\n              <div className=\"todo-footer-1\"></div>\r\n              <div className=\"todo-footer-2\"></div>\r\n            </div> : null}\r\n        </div>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;","import React, { Component } from 'react';\r\nimport './Footer.css'\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n      <footer>\r\n        <div className=\"wrapper\">\r\n          <p>Double-click to edit a todo</p>\r\n          <p>Inspired by petehunt</p>\r\n          <p>Part of TodoMVC</p>\r\n        </div>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nimport Header from './components/header/Header'\r\nimport Main from './components/main/Main'\r\nimport Footer from './components/footer/Footer';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <Main />\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}